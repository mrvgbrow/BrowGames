#!/c/Users/sp4ce/AppData/Local/Programs/Python/Python310/python

import pygame
import math

# General
SCREEN_HEIGHT=600
SCREEN_WIDTH=800
FONT_SIZE=36
SCREEN_COLOR=(0,0,0)
ORIGINAL_BOUNCE=True

# Timing
TICK_FRAMERATE=60

# Scoring 
SCORE_XPOS=10
SCORE_YPOS=10
SCORE_BOUNCE=10
SCORE_HIDE=False

# Paddle properties
PLAYER_MOVESPEED=600
PLAYER1_CONTROL='Arrows'
PLAYER2_CONTROL='Arrows'
PLAYER_Y_POSITION=0.95
PADDLE_WIDTH=0.1
PADDLE_LENGTH=0.017
PLAYER1_COLOR=(0,150,150)
PLAYER2_COLOR=(200,200,0)
PADDLE_CONTROL_FACTOR=0.25
PADDLE_RADIUS=3.0
PADDLE_TYPE='normal'

# Ball properties
BALL_NUMBER=1
BALL_SPEED=600
BALL_SPEED_INCREASE=100
BALL_MAX_SPEED=900
BALL_RADIUS=7
BALL_COLOR=(100,200,100)
BALL_MINANGLE_DEGREES=27.5
BALL_SQUARE=True
SHOW_BALL_TRAIL=True
GRAVITY=360

# Net properties
NET_WIDTH=0.005
NET_HEIGHT=0.2
NET_COLOR=(255,255,255)

# AI Properties
AI_ERROR_DISTANCE=0.0
AI_RANDOM_ADJUST=0.02
AI_SPEED_ERROR_FACTOR=0.0
AI_CORRECT_BOUNCE=True
AI_TRY_ALL=True

# Import pygame.locals for easier access to key coordinates
# Updated to conform to flake8 and black standards
from pygame.locals import (
    RLEACCEL,
    K_UP,
    K_DOWN,
    K_LEFT,
    K_a,
    K_d,
    K_RIGHT,
    K_ESCAPE,
    K_LEFTBRACKET,
    K_RIGHTBRACKET,
    KEYDOWN,
    KEYUP,
    K_p,
    QUIT,
)

def scale_parameters():
    global PADDLE_RADIUS,BALL_SPEED,PLAYER_MOVESTEP,TICK_FRAMERATE,BALL_SPEED_INCREASE,BALL_MAX_SPEED,SCORE_YPOS,SCREEN_WIDTH,SCREEN_HEIGHT,PADDLE_LIMIT,PADDLE_LENGTH,PADDLE_WIDTH,PLAYER_Y_POSITION,NET_HEIGHT,NET_WIDTH,BALL_MINANGLE_RADIANS,BALL_MINANGLE_DEGREES,GRAVITY
    PADDLE_LENGTH*=SCREEN_HEIGHT
    PADDLE_WIDTH*=SCREEN_WIDTH
    PADDLE_RADIUS*=PADDLE_WIDTH
    PLAYER_MOVESTEP=PLAYER_MOVESPEED/TICK_FRAMERATE
    BALL_SPEED/=TICK_FRAMERATE
    BALL_SPEED_INCREASE/=TICK_FRAMERATE
    BALL_MAX_SPEED/=TICK_FRAMERATE
    PADDLE_LIMIT=SCREEN_WIDTH/12
    PLAYER_Y_POSITION*=SCREEN_HEIGHT
    NET_HEIGHT*=SCREEN_HEIGHT
    NET_WIDTH*=SCREEN_WIDTH
    GRAVITY/=TICK_FRAMERATE**2
    BALL_MINANGLE_RADIANS=BALL_MINANGLE_DEGREES*math.pi/180.0

def set_preset(preset_dict):
    for parameter in preset_dict:
        globals()[parameter]=preset_dict[parameter]

def get_parameters(parameter_list):
    pars_dict={}
    for par in parameter_list:
       value=globals()[par]
       pars_dict[par]=value
    return pars_dict

